@model X.PagedList.IPagedList<APPDATA.Models.Bill>
@using X.PagedList.Web.Common
@using X.PagedList
@using X.PagedList.Mvc.Core
@{
    ViewData["Title"] = "DonCho";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    @using APPDATA.Models;
    @using System.Globalization;
    var bill = ViewBag.viewbill;
    List<BillDetail> billct = ViewBag.viewbillct;
    List<ProductDetail> prdct = ViewBag.viewprdct;
    List<Product> prd = ViewBag.viewprd;
    List<Size> size = ViewBag.sizee;
    List<Color> color = ViewBag.Collor;
    List<Account> acc = ViewBag.acc;
    int stt = 0;
}




<div class="card">
    <div class="card-header">
    </div>
    <div class="card-body">
        <form asp-controller="QLBills" asp-action="ShowDonCho" class="row contact_form" method="post">
            <div class="row">
                <div class="col-md-3 form-group">
                    <input type="text" class="form-control" name="search" placeholder="Nhập mã hóa đơn để tìm kiếm">

                </div>    <div class="col-md-2 form-group">
                    <button type="submit" class="btn btn-success">Tìm kiếm</button>

                </div>
            </div>
        </form>
        <div class="table-responsive table-sm">
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th>STT</th>
                        <th>Mã hóa đơn</th>
                        <th>Người tạo</th>
                        <th>Tên khách hàng</th>
                        <th>SDT</th>
                    
                        <th>Tổng tiền</th>
             
                        <th>Ngày tạo</th>


                    </tr>
                </thead>
                <tbody>
                    @if (bill != null || bill.Count() > 0)
                    {
                        @foreach (var itembill in bill)
                        {
                            var account = acc.FirstOrDefault(c => c.Id == itembill.AccountId);
                            var userbillct = billct.FirstOrDefault(c => c.BIllId == itembill.id);
                            var pct = prdct.FirstOrDefault(c => c.Id == userbillct.ProductDetailID);
                            var pro = prd.FirstOrDefault(c => c.Id == pct.Id_Product);
                            var siz = size.FirstOrDefault(c => c.Id == pct.Id_Size);
                            var colo = color.FirstOrDefault(c => c.Id == pct.Id_Color);
                            <tr>
                                <td>@(stt += 1)</td>
                                <td>@itembill.Code</td>

                                  
                              
                             
                                <td>@account.Name</td>
                                <td>@itembill.Name</td>

                                <td>
                                    @itembill.PhoneNumber
                                </td>
                              
                                <td>
                                    @string.Format(new CultureInfo("vi-VN"), "{0:C0}", itembill.TotalMoney)
                                </td>
                              


                                <td>
                                    @{
                                        DateTime createDate = itembill.CreateDate;
                                        string formattedDate = createDate != DateTime.MinValue
                                        ? createDate.ToString("dd/MM/yyyy")
                                        : "Chưa thay đổi";
                                    }
                                    @formattedDate
                                </td>

                                <td>

                                    <div class="d-inline-block text-nowrap">
                                        <button class="btn btn-sm btn-icon btn-text-secondary rounded-pill btn-icon dropdown-toggle hide-arrow" data-bs-toggle="dropdown">
                                            <i class="mdi mdi-dots-vertical mdi-20px"></i>
                                        </button>
                                        <div class="dropdown-menu dropdown-menu-end m-0">
                                            <a href=" @Url.Action("Delete", new { id = itembill.id })" class="dropdown-item ">
                                                <i class="mdi mdi-receipt-text-remove"></i>
                                                <span>Xóa đơn hàng</span>
                                            </a> <a href=" @Url.Action("Chitiet", new { id = itembill.id })" class="dropdown-item ">
                                                <i class="mdi mdi-eye-outline me-2"></i>
                                                <span>Xem đơn hàng</span>
                                            </a>
                                            <a href="@Url.Action("BanHangOff", new { id = itembill.id })" class="dropdown-item">
                                                <i class="mdi mdi-receipt-text-check-outline"></i>
                                                <span>Thanh toán tiếp</span>
                                            </a>
                                        
                                        </div>
                                    </div>

                                </td>

                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="12" class="text-center">Không có dữ liệu.</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        var cancelButtons = document.querySelectorAll('.dropdown-item.delete-record');

        cancelButtons.forEach(function (cancelButton) {
            cancelButton.addEventListener("click", function (event) {
                event.preventDefault();
                var itemId = this.getAttribute('data-itemid');
                var confirmation = confirm("Bạn có chắc chắn muốn hủy đơn này không?");

                if (confirmation) {
                    // Chuyển hướng đến action HuyDon nếu xác nhận
                    window.location.href = '@Url.Action("HuyDon", "QLBills")?id=' + itemId;
                } else {
                    // Không làm gì nếu hủy
                }
            });
        }); 
    });
</script>
<div>
    @Html.PagedListPager(Model, page => Url.Action("ShowBill", new { page = page, sort = ViewBag.sort }), new PagedListRenderOptions()
{
    ActiveLiElementClass = "active",
    PageClasses = new[] { "page-link" },
    LiElementClasses = new[] { "page-item" },
    UlElementClasses = new[] { "pagination", "justify-content-center", "mt-3", "size" },
    LinkToNextPageFormat = "Next",
    LinkToPreviousPageFormat = "Previous",
    MaximumPageNumbersToDisplay = 15,
    DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
    DisplayLinkToNextPage = PagedListDisplayMode.Always
})
</div>
